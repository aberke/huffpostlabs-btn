{"name":"Huffpostlabs-btn","tagline":"Mobile friendly buttons made easy","body":"<img width='100px' src=\"https://lh6.ggpht.com/A-yid4qbc4wci0KS4jls8roFYv3lMkFXYlisLryRxHBzEIwmadqX3Lc6OZNocQkBXB0=w300\"\r\n alt=\"easy button\" align=\"right\" />\r\nhuffpostlabs-btn\r\n================\r\n\r\nMobile friendly buttons made easy.\r\n\r\nMobile Device Issues Tackled\r\n---\r\n- On mobile devices, the ```onclick``` event is often not sensative enough\r\n- On mobile devices, the ```onclick``` event fires late\r\n- Avoid firing event handler if user touching element in order to scroll past element rather than click it\r\n- Allows developer to simply attach an ```onclick``` handler rather than worry about ```ontouchstart ontouchend ontouchmove``` or any of the problems above\r\n\r\nSo what does this do?\r\n---\r\n- Converts HTML elements with the ```onclick``` event handler into elements that can also handle more complex mobile events.\r\n- ```onclick``` event handler is fired on the ```touchend``` event if and only if:\r\n\t- The ```ontouchstart``` event was recently fired within 10px of the ```touchend``` event.\r\n- ```onclick``` event is canceled upon the firing of the ```touchend``` event so that the target event is only handled once.\r\n- If a user instead drags away from the place where the initial ```touchstart``` event was fired, then the event is cancelled.\r\n\t- This allows the user to scroll past a button without an event firing.\r\n\r\nStep By Step Use:\r\n---\r\n- complement all elements that have an ```onclick``` handler with the ```data-huffpostlabs-btn``` tag.\r\n- create a ```HuffpostLabsBtnMaster``` to convert your buttons: \r\n\t- ```var myBtnMaster = new HuffpostLabsBtnMaster(context)``` \r\n\t- Where context is the HTML element that contains your buttons.\r\n- HuffpostLabsBtnMaster will find all of the elements with the ```data-huffpostlabs-btn```, grab each elements onclick handler, and retrofit each element with better event handling that calls that handler.\r\n\r\nExample Usage:\r\n---\r\n```\r\n\t<script src=\"http://aberke.github.io/huffpostlabs-btn/btn-master.js\"></script>\r\n\t<div id='all-my-btns-container'>\r\n\t\t<p>la da daaaa</p>\r\n\t\t<span data-huffpostlabs-btn onclick='f1()'>FIRE f1</span>\r\n\t\t<span data-huffpostlabs-btn onclick='f2()'>FIRE f2</span>\r\n\t\t<p>More HTML</p>\r\n\t</div>\r\n\t<script>\r\n\t\tvar container = document.getElementById('all-my-btns-container');\r\n\t\tvar myBtnMaster = new HuffpostLabsBtnMaster(container);\r\n\t</script>\r\n```\r\n\r\nFake it like it's desktop\r\n===\r\n- In your stylesheet, utilize the .hover class like you would the :hover pseudo-class\r\n\t- .hover is added to element on touchstart event\r\n\t- .hover is removed from element on touchend event\r\n\r\nPull Requests:\r\n===\r\nYes Please.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}